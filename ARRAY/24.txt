class Solution {
public:
    void gameOfLife(vector<vector<int>>& arr) {
        int m=arr.size();
        int n=arr[0].size();
        vector<vector<int>>visited(m,vector<int>(n,0));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                int c1=0;
                int c0=0;
                if(arr[i][j]==0)
                {
                    if(j+1<n)
                    {
                        if(arr[i][j+1]==1)
                            c1++;
                    }
                    if(i+1<m)
                    {
                        if(arr[i+1][j]==1)
                            c1++;
                    }
                    if(i-1>=0)
                    {
                        if(arr[i-1][j]==1)
                            c1++;
                    }
                    if(j-1>=0)
                    {
                        if(arr[i][j-1]==1)
                            c1++;
                    }
                    if(i-1>=0&&j-1>=0)
                    {
                        if(arr[i-1][j-1]==1)
                            c1++;
                    }
                    if(i-1>=0&&j+1<n)
                    {
                        if(arr[i-1][j+1]==1)
                            c1++;
                    }
                    if(i+1<m&&j-1>=0)
                    {
                        if(arr[i+1][j-1]==1)
                            c1++;
                    }
                    if(i+1<m&&j+1<n)
                    {
                        if(arr[i+1][j+1]==1)
                            c1++;
                    }
                    if(c1==3)
                        visited[i][j]=1;
                    else
                        continue;
                }
                else
                {
                      if(j+1<n)
                    {
                        if(arr[i][j+1]==1)
                            c1++;
                    }
                    if(i+1<m)
                    {
                        if(arr[i+1][j]==1)
                            c1++;
                    }
                    if(i-1>=0)
                    {
                        if(arr[i-1][j]==1)
                            c1++;
                    }
                    if(j-1>=0)
                    {
                        if(arr[i][j-1]==1)
                            c1++;
                    }
                    if(i-1>=0&&j-1>=0)
                    {
                        if(arr[i-1][j-1]==1)
                            c1++;
                    }
                    if(i-1>=0&&j+1<n)
                    {
                        if(arr[i-1][j+1]==1)
                            c1++;
                    }
                    if(i+1<m&&j-1>=0)
                    {
                        if(arr[i+1][j-1]==1)
                            c1++;
                    }
                    if(i+1<m&&j+1<n)
                    {
                        if(arr[i+1][j+1]==1)
                            c1++;
                    }
                    if(c1<2)
                        visited[i][j]=0;
                    else if(c1==2||c1==3)
                        visited[i][j]=1;
                    else if(c1>3)
                        visited[i][j]=0;
                    else
                        continue;
                
                    
                }
                    
                
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
                arr[i][j]=visited[i][j];
        }
        
    }
};