   int scheduleCourse(vector<vector<int>>& courses) {
        vector<vector<int>>jobs;
       // map<int,int>dp;
        for(auto it:courses)
        {
            jobs.push_back(vector<int>{it[0],it[1]});
        }
        sort(jobs.begin(),jobs.end(),[](const vector<int>&a,const vector<int>&b){return a[1]<b[1];});
   priority_queue<int>pq;
        int t=0;
        for(int i=0;i<jobs.size();i++)
        {
            t+=jobs[i][0];
            if(t<=jobs[i][1])
            {
                pq.push(jobs[i][0]);
            }
            else if(pq.size()&&pq.top()>jobs[i][0])
            {
                t-=pq.top();
                pq.pop();
                pq.push(jobs[i][0]);
                
            }
            else
            {
                t-=jobs[i][0];
            }
                
        }
        return pq.size();
    }