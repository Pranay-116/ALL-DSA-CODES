#include<bits/stdc++.h>
int f(int idx1,int idx2,string s,string t,vector<vector<int>>&dp)
{
    if(idx1<0||idx2<0)
        return 0;
    if(dp[idx1][idx2]!=-1)
        return dp[idx1][idx2];
    if(s[idx1]==t[idx2])
        return dp[idx1][idx2]= 1+f(idx1-1,idx2-1,s,t,dp);
    return dp[idx1][idx2]=max(f(idx1-1,idx2,s,t,dp),f(idx1,idx2-1,s,t,dp));
}
int lcs(string s, string t)
{
    int n=s.length();
    int m=t.length();
	vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
    return f(n-1,m-1,s,t,dp);
//      for(int j=0;j<=m;j++)
//         dp[0][j]=0;
//     for(int i=0;i<=n;i++)
//         dp[i][0]=0;
   
//     for(int i=1;i<n+1;i++)
//     {
//         for(int j=1;j<m+1;j++)
//         {
//             if(s[i-1]==t[j-1])
//                 dp[i][j]=1+dp[i-1][j-1];
//             else
//                 dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
//         }
//     }
//    // return dp[n][m];
//     int i=n,j=m;
//     string ans;
//     while(i>0&&j>0)
//     {
//         if(s[i-1]==t[j-1])
//         {
//             ans.push_back(s[i-1]);
//             i--;
//             j--;
//         }
//         else if(dp[i-1][j]>dp[i][j-1])
//             i--;
//         else
//             j--;
            
//     }
//     reverse(ans.begin(),ans.end());
//     cout<<ans<<endl;
//     return dp[n][m];
    
    
}