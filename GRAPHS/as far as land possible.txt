   bool is_Safe(int i,int j,int n,int m,vector<vector<int>>&grid)
    {
        if(i<0||i>=n||j<0||j>=m||grid[i][j]==1)
            return false;
        return true;
    }
    int maxDistance(vector<vector<int>>& grid) {
        int dx[4]={1,-1,0,0};
        int dy[4]={0,0,-1,1};
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<int,int>>q;
        int ans=-1;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                    q.push({i,j});
            }
        }
        while(!q.empty())
        {
            int sz=q.size();
            while(sz-->0)
            {
                auto it=q.front();
                q.pop();
                for(int i=0;i<4;i++)
                {
                    int curr_x=it.first+dx[i];
                    int curr_y=it.second+dy[i];
                    if(is_Safe(curr_x,curr_y,n,m,grid))
                    {
                        grid[curr_x][curr_y]=1;
                        q.push({curr_x,curr_y});
                    }
                }
            }
            ans++;
                
            
        }
           if(ans==0||ans==-1)
            return -1;
        else
            return ans;
            
            
        
    }