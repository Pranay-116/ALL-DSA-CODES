 void dfs(int s,vector<int>adj[],long long &c,vector<bool>&visited)
    {
        visited[s]=1;
        c++;
        for(auto it:adj[s])
        {
            if(!visited[it])
                dfs(it,adj,c,visited);
        }
    }
    long long countPairs(int n, vector<vector<int>>& edges) {
        ll N=n;
        long long x=1LL*(N*(N-1)/2);
        vector<int>adj[n];
        for(auto it:edges)
        {
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        vector<bool>visited(n,0);
        for(int i=0;i<n;i++)
        {
            if(!visited[i])
            {
                long long c=0;
                dfs(i,adj,c,visited);
                x-=1LL*((c)*(c-1)/2);
            }
        }
        return x;
    }
 